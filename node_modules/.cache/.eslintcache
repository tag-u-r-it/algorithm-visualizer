[{"/home/dick/x/projektit/algorithm-visualizer/src/index.js":"1","/home/dick/x/projektit/algorithm-visualizer/src/App.js":"2","/home/dick/x/projektit/algorithm-visualizer/src/reportWebVitals.js":"3"},{"size":535,"mtime":1653832901166,"results":"4","hashOfConfig":"5"},{"size":2674,"mtime":1653845045999,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1653832901189,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mw2ule",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dick/x/projektit/algorithm-visualizer/src/index.js",[],[],"/home/dick/x/projektit/algorithm-visualizer/src/App.js",["18"],[],"import './App.css';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [numbers, setNumbers] = useState([]);\n  const [numberCount, setNumberCount] = useState(50);\n  const [isSorting, setIsSorting] = useState(false);\n\n  useEffect(()=>{\n    for (let index = 0; index < numberCount; index++) {\n      let element = {\"number\": (Math.floor(Math.random() * 500) + 1), \"selected\": false};\n      setNumbers(numbers => [...numbers, element]);\n    }\n  }, []);\n\n  const handleChange = (event) =>{\n    setNumberCount(event.target.value);\n  };\n\n  const handleSet = (event) =>{\n    event.preventDefault();\n    setNumbers([]);\n    for (let index = 0; index < numberCount; index++) {\n      let element = {\"number\": (Math.floor(Math.random() * 500) + 1), \"selected\": false};\n      setNumbers(numbers => [...numbers, element]);\n    }\n  };\n\n  const wait = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\n  const sortFunction = async (event) => {\n    event.preventDefault();\n    setIsSorting(true)\n    let numbers_copy = [...numbers];\n    for (let index = 0; index < numbers.length; index++) {\n      for (let index2 = 0; index2 < index; index2++) {\n        if (numbers_copy[index].number < numbers_copy[index2].number) {\n          numbers_copy[index].selected = true;\n          numbers_copy[index2].selected = true;\n          setNumbers([...numbers_copy]);\n          await wait(10)\n          let temp_num = numbers[index].number;\n          let temp_num2 = numbers[index2].number;\n          numbers_copy[index].number = temp_num2;\n          numbers_copy[index2].number = temp_num;\n          numbers_copy[index].selected = false;\n          numbers_copy[index2].selected = false;\n          setNumbers([...numbers_copy]);\n        }\n        else\n        {\n          numbers_copy[index].selected = true;\n          numbers_copy[index2].selected = true;\n          setNumbers([...numbers_copy]);\n          await wait(10)\n          numbers_copy[index].selected = false;\n          numbers_copy[index2].selected = false;\n          setNumbers([...numbers_copy]);\n        }\n      }\n    }\n    setIsSorting(false)\n  };\n\n  return (\n    <div className='container'>\n      <div className=\"bars\">\n        {numbers.map(x => <div className='value_bar' class={x.selected ? \"value_bar selected\" : \"value_bar\"} style={{height:x.number}} key={Math.random()}></div>)}\n      </div>\n      <form>\n        <input value={numberCount} onChange={handleChange}></input>\n        <button onClick={handleSet} disabled={isSorting ? \"true\" : \"\"}>SET</button>\n        <button onClick={sortFunction} disabled={isSorting ? \"true\" : \"\"}>SORT</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","/home/dick/x/projektit/algorithm-visualizer/src/reportWebVitals.js",[],[],{"ruleId":"19","severity":1,"message":"20","line":14,"column":6,"nodeType":"21","endLine":14,"endColumn":8,"suggestions":"22"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'numberCount'. Either include it or remove the dependency array.","ArrayExpression",["23"],{"desc":"24","fix":"25"},"Update the dependencies array to be: [numberCount]",{"range":"26","text":"27"},[471,473],"[numberCount]"]