{"ast":null,"code":"var _jsxFileName = \"/home/dick/x/projektit/algorithm-visualizer/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [numbers, setNumbers] = useState([{}]);\n  const [numbersSelected, setNumbersSelected] = useState([true, false, true]);\n  const [numberCount, setNumberCount] = useState(100);\n  useEffect(() => {\n    for (let index = 0; index < numberCount; index++) {\n      let temp_state = [...numbers]; //setNumbers(numbers => [...numbers, (Math.floor(Math.random() * 500) + 1)]);\n    }\n  }, []);\n\n  const handleChange = event => {\n    setNumberCount(event.target.value);\n  };\n\n  const handleSet = event => {\n    event.preventDefault();\n    setNumbers([]);\n\n    for (let index = 0; index < numberCount; index++) {\n      setNumbers(numbers => [...numbers, Math.floor(Math.random() * 500) + 1]);\n    }\n  };\n\n  const sortFunction = event => {\n    event.preventDefault();\n    let numbers_copy = [...numbers];\n\n    for (let index = 0; index < numbers.length; index++) {\n      for (let index2 = 0; index2 < index + 1; index2++) {\n        if (numbers_copy[index] < numbers_copy[index2]) {\n          let temp_num = numbers[index];\n          let temp_num2 = numbers[index2];\n          console.log(temp_num, temp_num2);\n          numbers_copy[index] = temp_num2;\n          numbers_copy[index2] = temp_num;\n          console.log(index, numbers_copy[index], index2, numbers_copy[index2]);\n          console.log(\"----\");\n        }\n      }\n    }\n\n    const sorted = numbers.sort((a, b) => a - b); //console.log(numbers, sorted)\n\n    setNumbers(numbers_copy);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bars\",\n      children: numbers.map(x => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"value_bar\",\n        style: {\n          height: x\n        },\n        children: x\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 27\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSet,\n        children: \"SET\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sortFunction,\n        children: \"SORT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HyM64cqy5eYqKmJ+PGjb1fQV1WM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","App","numbers","setNumbers","numbersSelected","setNumbersSelected","numberCount","setNumberCount","index","temp_state","handleChange","event","target","value","handleSet","preventDefault","Math","floor","random","sortFunction","numbers_copy","length","index2","temp_num","temp_num2","console","log","sorted","sort","a","b","map","x","height"],"sources":["/home/dick/x/projektit/algorithm-visualizer/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [numbers, setNumbers] = useState([{}]);\n  const [numbersSelected, setNumbersSelected] = useState([true,false,true]);\n  const [numberCount, setNumberCount] = useState(100);\n\n  useEffect(()=>{\n    for (let index = 0; index < numberCount; index++) {\n      let temp_state = [...numbers];\n      //setNumbers(numbers => [...numbers, (Math.floor(Math.random() * 500) + 1)]);\n    }\n  }, []);\n\n  const handleChange = (event) =>{\n    setNumberCount(event.target.value);\n  };\n\n  const handleSet = (event) =>{\n    event.preventDefault();\n    setNumbers([]);\n    for (let index = 0; index < numberCount; index++) {\n      setNumbers(numbers => [...numbers, (Math.floor(Math.random() * 500) + 1)]);\n    }\n  };\n\n  const sortFunction = (event) => {\n    event.preventDefault();\n    let numbers_copy = [...numbers];\n    for (let index = 0; index < numbers.length; index++) {\n      for (let index2 = 0; index2 < index+1; index2++) {\n        if (numbers_copy[index] < numbers_copy[index2]) {\n          let temp_num = numbers[index];\n          let temp_num2 = numbers[index2];\n          console.log(temp_num, temp_num2)\n          numbers_copy[index] = temp_num2;\n          numbers_copy[index2] = temp_num;\n          console.log(index, numbers_copy[index], index2, numbers_copy[index2])\n          console.log(\"----\")\n        }\n      }\n    }\n    const sorted = numbers.sort((a,b)=>a-b);\n    //console.log(numbers, sorted)\n    setNumbers(numbers_copy);\n    \n  };\n\n  return (\n    <div className='container'>\n      <div className=\"bars\">\n        {numbers.map(x => <div className='value_bar' style={{height:x}} key={Math.random()}>{x}</div>)}\n      </div>\n        <form>\n          <input onChange={handleChange}></input>\n          <button onClick={handleSet}>SET</button>\n          <button onClick={sortFunction}>SORT</button>\n        </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}