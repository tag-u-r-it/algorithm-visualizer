{"ast":null,"code":"var _jsxFileName = \"/home/dick/x/projektit/algorithm-visualizer/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [numbers, setNumbers] = useState([]);\n  const [numberCount, setNumberCount] = useState(100);\n  useEffect(() => {\n    for (let index = 0; index < numberCount; index++) {\n      setNumbers(numbers => [...numbers, Math.floor(Math.random() * 500) + 1]);\n    }\n  }, []);\n\n  const handleChange = event => {\n    setNumberCount(event.target.value);\n  };\n\n  const handleSet = event => {\n    event.preventDefault();\n    setNumbers([]);\n\n    for (let index = 0; index < numberCount; index++) {\n      setNumbers(numbers => [...numbers, Math.floor(Math.random() * 500) + 1]);\n    }\n  };\n\n  const sortFunction = event => {\n    event.preventDefault();\n    let isSorting = true;\n\n    while (isSorting) {\n      for (let index = 0; index < numbers.length; index++) {\n        let temp_num = numbers[index];\n\n        for (let index2 = 0; index2 < index + 1; index2++) {\n          let temp_num2 = numbers[index2];\n\n          if (temp_num2 > temp_num) {\n            let numbers_copy = [...numbers];\n            numbers_copy[index] = temp_num2;\n            numbers_copy[index2] = temp_num;\n            setNumbers(numbers_copy);\n          }\n        }\n      }\n\n      const sorted = numbers.sort();\n\n      if (numbers === sorted) {\n        isSorting = false;\n      }\n    }\n\n    console.log(numbers, numbers.sort());\n    console.log(numbers === numbers.sort());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bars\",\n      children: numbers.map(x => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"value_bar\",\n        style: {\n          height: x\n        }\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 27\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSet,\n        children: \"SET\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sortFunction,\n        children: \"SORT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lae0OyUd1xNuNnR48j2nmhEZ2iM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","App","numbers","setNumbers","numberCount","setNumberCount","index","Math","floor","random","handleChange","event","target","value","handleSet","preventDefault","sortFunction","isSorting","length","temp_num","index2","temp_num2","numbers_copy","sorted","sort","console","log","map","x","height"],"sources":["/home/dick/x/projektit/algorithm-visualizer/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [numbers, setNumbers] = useState([]);\n  const [numberCount, setNumberCount] = useState(100);\n\n  useEffect(()=>{\n    for (let index = 0; index < numberCount; index++) {\n      setNumbers(numbers => [...numbers, (Math.floor(Math.random() * 500) + 1)]);\n    }\n  }, []);\n\n  const handleChange = (event) =>{\n    setNumberCount(event.target.value);\n  };\n\n  const handleSet = (event) =>{\n    event.preventDefault();\n    setNumbers([]);\n    for (let index = 0; index < numberCount; index++) {\n      setNumbers(numbers => [...numbers, (Math.floor(Math.random() * 500) + 1)]);\n    }\n  };\n\n  const sortFunction = (event) => {\n    event.preventDefault();\n    let isSorting = true;\n    while (isSorting) {\n      for (let index = 0; index < numbers.length; index++) {\n        let temp_num = numbers[index];\n        for (let index2 = 0; index2 < index+1; index2++) {\n          let temp_num2 = numbers[index2];\n          if (temp_num2 > temp_num) {\n            let numbers_copy = [...numbers];\n            numbers_copy[index] = temp_num2;\n            numbers_copy[index2] = temp_num;\n            setNumbers(numbers_copy);\n          }\n        }\n      }\n      const sorted = numbers.sort();\n      if (numbers === sorted) {\n        isSorting = false;\n      }\n    }\n\n    console.log(numbers, numbers.sort())\n    console.log(numbers === numbers.sort())\n  };\n\n  return (\n    <div className='container'>\n      <div className=\"bars\">\n        {numbers.map(x => <div className='value_bar' style={{height:x}} key={Math.random()}></div>)}\n      </div>\n        <form>\n          <input onChange={handleChange}></input>\n          <button onClick={handleSet}>SET</button>\n          <button onClick={sortFunction}>SORT</button>\n        </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}